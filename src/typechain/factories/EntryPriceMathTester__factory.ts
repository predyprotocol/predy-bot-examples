/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EntryPriceMathTester,
  EntryPriceMathTesterInterface,
} from "../EntryPriceMathTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "_entryPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_position",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_tradePrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_positionTrade",
        type: "int256",
      },
    ],
    name: "verifyUpdateEntryPrice",
    outputs: [
      {
        internalType: "int256",
        name: "newEntryPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "profit",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806346cd203a14610030575b600080fd5b61005f6004803603608081101561004657600080fd5b5080359060208101359060408101359060600135610078565b6040805192835260208301919091528051918290030190f35b60008061008786868686610094565b9150915094509492505050565b600080806100a286856101d2565b90508515806100bc57506000861380156100bc5750600084135b806100d257506000861280156100d25750600084125b15610128576101216100ec6100e788876101d2565b610240565b61011b6101026100fb88610240565b8990610257565b61011561010e8b610240565b8c90610257565b906101d2565b90610300565b92506101c8565b6000861380156101385750600084125b80156101445750600081135b80610166575060008612801561015a5750600084135b80156101665750600081125b1561019a578692506305f5e10061018b61018087866103b8565b600087900390610257565b8161019257fe5b0591506101c8565b80156101a4578492505b6305f5e1006101bd6101b6878a6103b8565b8890610257565b816101c457fe5b0591505b5094509492505050565b60008282018183128015906101e75750838112155b806101fc57506000831280156101fc57508381125b6102375760405162461bcd60e51b815260040180806020018281038252602181526020018061041e6021913960400191505060405180910390fd5b90505b92915050565b600080821215610253578160000361023a565b5090565b6000826102665750600061023a565b8260001914801561027a5750600160ff1b82145b156102b65760405162461bcd60e51b81526004018080602001828103825260278152602001806104606027913960400191505060405180910390fd5b828202828482816102c357fe5b05146102375760405162461bcd60e51b81526004018080602001828103825260278152602001806104606027913960400191505060405180910390fd5b600081610354576040805162461bcd60e51b815260206004820181905260248201527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604482015290519081900360640190fd5b816000191480156103685750600160ff1b83145b156103a45760405162461bcd60e51b815260040180806020018281038252602181526020018061043f6021913960400191505060405180910390fd5b60008284816103af57fe5b05949350505050565b60008183038183128015906103cd5750838113155b806103e257506000831280156103e257508381135b6102375760405162461bcd60e51b81526004018080602001828103825260248152602001806104876024913960400191505060405180910390fdfe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f775369676e6564536166654d6174683a206469766973696f6e206f766572666c6f775369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775369676e6564536166654d6174683a207375627472616374696f6e206f766572666c6f77a2646970667358221220b6c2f5e0a415f4799039ed853296fa76e7ad96bfb091912249e3b91b6c3700dd64736f6c63430007060033";

export class EntryPriceMathTester__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EntryPriceMathTester> {
    return super.deploy(overrides || {}) as Promise<EntryPriceMathTester>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EntryPriceMathTester {
    return super.attach(address) as EntryPriceMathTester;
  }
  connect(signer: Signer): EntryPriceMathTester__factory {
    return super.connect(signer) as EntryPriceMathTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPriceMathTesterInterface {
    return new utils.Interface(_abi) as EntryPriceMathTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPriceMathTester {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EntryPriceMathTester;
  }
}
