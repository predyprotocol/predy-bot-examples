/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SpreadLibTester,
  SpreadLibTesterInterface,
} from "../SpreadLibTester";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "blockLastLongTransaction",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "minLongTradePrice",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "blockLastShortTransaction",
            type: "uint128",
          },
          {
            internalType: "int128",
            name: "maxShortTradePrice",
            type: "int128",
          },
          {
            internalType: "uint256",
            name: "safetyBlockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numBlocksPerSpreadDecreasing",
            type: "uint256",
          },
        ],
        internalType: "struct SpreadLib.Info",
        name: "_info",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "_isLong",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
      {
        internalType: "uint128",
        name: "_timestamp",
        type: "uint128",
      },
    ],
    name: "getUpdatedPrice",
    outputs: [
      {
        internalType: "int256",
        name: "updatedPrice",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "info",
    outputs: [
      {
        internalType: "uint128",
        name: "blockLastLongTransaction",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "minLongTradePrice",
        type: "int128",
      },
      {
        internalType: "uint128",
        name: "blockLastShortTransaction",
        type: "uint128",
      },
      {
        internalType: "int128",
        name: "maxShortTradePrice",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "safetyBlockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numBlocksPerSpreadDecreasing",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_safetyBlockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksPerSpreadDecreasing",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isLong",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
      {
        internalType: "uint128",
        name: "_timestamp",
        type: "uint128",
      },
    ],
    name: "updatePrice",
    outputs: [
      {
        internalType: "int256",
        name: "updatedPrice",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061085f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063370158ea1461005c5780633873e7c31461007f578063705550d91461009f578063c0324c77146100b2578063e1c7392a146100c7575b600080fd5b6100646100cf565b60405161007696959493929190610776565b60405180910390f35b61009261008d366004610649565b610105565b604051610076919061076d565b6100926100ad366004610684565b6101e3565b6100c56100c036600461074c565b610205565b005b6100c5610215565b6000546001546002546003546001600160801b0380851694600160801b90819004600f90810b95928316949190920490910b9186565b6040805160c081018252600080546001600160801b038082168452600160801b91829004600f90810b810b60208601526001548083169686019690965291909404810b900b6060830152600254608083015260035460a083015291610171908290879087908716610221565b81516000805460208501516fffffffffffffffffffffffffffffffff199182166001600160801b03948516178416600160801b600f92830b86168102919091179093556040860151600180546060909801519790931690851617841695900b9092160292909217909155949350505050565b60006101fa858585856001600160801b0316610221565b90505b949350505050565b61021160008383610463565b5050565b61021f6000610473565b565b608084015182906102335750816101fd565b8315610353578460800151820385604001516001600160801b031610610303578460600151600f0b8112156103035760006102898660a0015187604001516001600160801b031685038161028357fe5b046104b1565b90506127106102ac82612710038860600151600f0b6104fd90919063ffffffff16565b816102b357fe5b0582136102f8576102eb6127106102de83612710038960600151600f0b6104fd90919063ffffffff16565b816102e557fe5b056105af565b600f90810b900b60608701525b50506060840151600f0b5b808560200151600f0b13806103275750608085015185516001600160801b03160182115b1561034257610335816105af565b600f90810b900b60208601525b6001600160801b03821685526101fd565b8460800151820385600001516001600160801b03161061040a578460200151600f0b81131561040a57600061039d8660a0015187600001516001600160801b031685038161028357fe5b90506127106103c082612710018860200151600f0b6104fd90919063ffffffff16565b816103c757fe5b0582126103ff576103f26127106102de83612710018960200151600f0b6104fd90919063ffffffff16565b600f90810b900b60208701525b50506020840151600f0b5b808560600151600f0b1280610431575081856080015186604001516001600160801b031601105b1561044c5761043f816105af565b600f90810b900b60608601525b6001600160801b0382166040860152949350505050565b6002830191909155600390910155565b80546f7fffffffffffffffffffffffffffffff60801b6001600160801b03918216178255600182018054909116905560056002820155600390810155565b6000600160ff1b82106104f55760405162461bcd60e51b81526004018080602001828103825260288152602001806108026028913960400191505060405180910390fd5b50805b919050565b60008261050c575060006105a9565b826000191480156105205750600160ff1b82145b1561055c5760405162461bcd60e51b81526004018080602001828103825260278152602001806107db6027913960400191505060405180910390fd5b8282028284828161056957fe5b05146105a65760405162461bcd60e51b81526004018080602001828103825260278152602001806107db6027913960400191505060405180910390fd5b90505b92915050565b60006f7fffffffffffffffffffffffffffffff1982121580156105d557506001607f1b82125b6104f55760405162461bcd60e51b81526004018080602001828103825260278152602001806107b46027913960400191505060405180910390fd5b803580151581146104f857600080fd5b8035600f81900b81146104f857600080fd5b80356001600160801b03811681146104f857600080fd5b60008060006060848603121561065d578283fd5b61066684610610565b92506020840135915061067b60408501610632565b90509250925092565b60008060008084860361012081121561069b578182fd5b60c08112156106a8578182fd5b5060405160c0810181811067ffffffffffffffff821117156106c657fe5b6040526106d286610632565b81526106e060208701610620565b60208201526106f160408701610632565b604082015261070260608701610620565b60608201526080860135608082015260a086013560a08201528094505061072b60c08601610610565b925060e085013591506107416101008601610632565b905092959194509250565b6000806040838503121561075e578182fd5b50508035926020909101359150565b90815260200190565b6001600160801b039687168152600f95860b6020820152939095166040840152920b6060820152608081019190915260a081019190915260c0019056fe53616665436173743a2076616c756520646f65736e27742066697420696e2031323820626974735369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7753616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536a264697066735822122077e1d9cb61ffda44ae0195be104ce5e02544934ad27d5a17ecb0c5ade80d9bd664736f6c63430007060033";

export class SpreadLibTester__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SpreadLibTester> {
    return super.deploy(overrides || {}) as Promise<SpreadLibTester>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SpreadLibTester {
    return super.attach(address) as SpreadLibTester;
  }
  connect(signer: Signer): SpreadLibTester__factory {
    return super.connect(signer) as SpreadLibTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpreadLibTesterInterface {
    return new utils.Interface(_abi) as SpreadLibTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpreadLibTester {
    return new Contract(address, _abi, signerOrProvider) as SpreadLibTester;
  }
}
