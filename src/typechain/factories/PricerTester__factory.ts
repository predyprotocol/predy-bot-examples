/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PricerTester, PricerTesterInterface } from "../PricerTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_spotPrice",
        type: "int256",
      },
    ],
    name: "verifyCalculateDelta",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "verifyCalculateGamma",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_spotPrice",
        type: "int256",
      },
    ],
    name: "verifyCalculatePrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063658fd0cf14610046578063802ea0eb1461007b5780638c2bea5714610098575b600080fd5b6100696004803603604081101561005c57600080fd5b50803590602001356100bb565b60408051918252519081900360200190f35b6100696004803603602081101561009157600080fd5b50356100d0565b610069600480360360408110156100ae57600080fd5b50803590602001356100e3565b60006100c783836100ef565b90505b92915050565b60006100db82610159565b90505b919050565b60006100c7838361017a565b60008261010157506305f5e1006100ca565b82600114156101275761271061011883600261019d565b8161011f57fe5b0590506100ca565b6040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b600081610168575060006100de565b81600114156101275750614e206100de565b6000826101885750806100ca565b82600114156101275764e8d4a5100061011883805b6000826101ac575060006100ca565b826000191480156101c05750600160ff1b82145b156101fc5760405162461bcd60e51b81526004018080602001828103825260278152602001806102476027913960400191505060405180910390fd5b8282028284828161020957fe5b05146100c75760405162461bcd60e51b81526004018080602001828103825260278152602001806102476027913960400191505060405180910390fdfe5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122094fd2deebdded306806e65f92ea5dc8dcbfd55cb71379a281a9e3f00c9747cee64736f6c63430007060033";

export class PricerTester__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PricerTester> {
    return super.deploy(overrides || {}) as Promise<PricerTester>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PricerTester {
    return super.attach(address) as PricerTester;
  }
  connect(signer: Signer): PricerTester__factory {
    return super.connect(signer) as PricerTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricerTesterInterface {
    return new utils.Interface(_abi) as PricerTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PricerTester {
    return new Contract(address, _abi, signerOrProvider) as PricerTester;
  }
}
